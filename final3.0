from tkinter import *
from tkinter import ttk, colorchooser, filedialog
import PIL
from PIL import ImageGrab


class main:
    def __init__(self,master):
        self.master = master
        self.color_fg = 'black'
        self.color_bg = 'white'
        self.old_x = None
        self.old_y = None
        self.penwidth = 5
        self.drawWidgets()
        #self.c.bind('<B1-Motion>',self.paint)
        #self.c.bind('<ButtonRelease-1>',self.reset)

    def paint(self,e):
        if self.old_x and self.old_y:
            self.c.create_line(self.old_x,self.old_y,e.x,e.y,width=self.penwidth,fill=self.color_fg,capstyle=ROUND,smooth=True)

        self.old_x = e.x
        self.old_y = e.y

    def reset(self,e):
        self.old_x = None
        self.old_y = None      

    def changeW(self,e):
        self.penwidth = e

    def save(self):
        file = filedialog.asksaveasfilename(filetypes=[('Portable Network Graphics','*.png')])
        if file:
            x = self.master.winfo_rootx() + self.c.winfo_x()
            y = self.master.winfo_rooty() + self.c.winfo_y()
            x1 = x + self.c.winfo_width()
            y1 = y + self.c.winfo_height()

            PIL.ImageGrab.grab().crop((x,y,x1,y1)).save(file + '.png')
            
    def paintOval(self):
        i = IntVar()
        i.set(1)
        if(i.get() == 1):
            self.c.bind('<Button-1>', self.drawOval)
        else:
            self.c.bind('B1-Motion', self.paint)
        
    def drawOval(self, i):
        xM = root.winfo_pointerx()
        yM = root.winfo_pointery()
        abs_coord_x = root.winfo_pointerx() - root.winfo_vrootx()
        abs_coord_y = root.winfo_pointery() - root.winfo_vrooty()
        width1 = 200
        number = width1 / 2
        number2 = xM + number
        number3 = yM - number
        number4 = xM - number
        number5 = yM + number
        self.c.create_oval(number2, number3, number4, number5, outline="black", fill=None, width=3)

    def paintRectangle(self):
        i = IntVar()
        i.set(2)
        if(i.get() == 2):
            self.c.bind('<Button-1>', self.drawRectangle)
        else:
            self.c.bind('<B1-Motion>', self.paint)

    def drawRectangle(self, i):
        xM1 = root.winfo_pointerx()
        yM1 = root.winfo_pointery()
        abs_coord_x1 = root.winfo_pointerx() - root.winfo_vrootx()
        abs_coord_y1 = root.winfo_pointery() - root.winfo_vrooty()
        width1 = 200
        number = width1 / 2
        number2 = xM1 + number
        number3 = yM1 - number
        number4 = xM1 - number
        number5 = yM1 + number
        self.c.create_rectangle(number2, number3, number4, number5, outline="black", fill=None, width=3)
    
    def clear(self):
        self.c.delete(ALL)

    def change_fg(self):
        self.color_fg=colorchooser.askcolor(color=self.color_fg)[1]

    def change_bg(self):
        self.color_bg=colorchooser.askcolor(color=self.color_bg)[1]
        self.c['bg'] = self.color_bg

    def drawWidgets(self):
        i = IntVar()
        self.ovalBtn = Radiobutton(text='Коло', value=1, indicatoron=0, variable=i, fg='black', activeforeground='white',  activebackground='black', command=self.paintOval)
        self.ovalBtn.pack()
        self.rectangleBtn = Radiobutton(text='Квадрат', value=2, indicatoron=0, variable=i, fg='black', activeforeground='white', activebackground='black', command=self.paintRectangle)
        self.rectangleBtn.pack()
        self.controls = Frame(self.master,padx = 5,pady = 5)
        Label(self.controls, text='Ширина пензлика: ',font=('',15)).grid(row=0,column=0)
        self.slider = ttk.Scale(self.controls,from_= 5, to = 100, command=self.changeW,orient=HORIZONTAL)
        self.slider.set(self.penwidth)
        self.slider.grid(row=0,column=1,ipadx=30)
        self.controls.pack()
        
        self.c = Canvas(self.master,width=500,height=400,bg=self.color_bg,)
        self.c.pack(fill=BOTH,expand=True)

        menu = Menu(self.master)
        self.master.config(menu=menu)
        filemenu = Menu(menu)
        menu.add_cascade(label='Файл..',menu=filemenu)
        filemenu.add_command(label='Експорт..',command=self.save)
        colormenu = Menu(menu)
        menu.add_cascade(label='Кольора',menu=colormenu)
        colormenu.add_command(label='Колір пензля',command=self.change_fg)
        colormenu.add_command(label='Колік заднього фону',command=self.change_bg)
        optionmenu = Menu(menu)
        menu.add_cascade(label='Опції',menu=optionmenu)
        optionmenu.add_command(label='Очистити поле',command=self.clear)
        optionmenu.add_command(label='Вийти',command=self.master.destroy) 
        
        

if __name__ == '__main__':
    root = Tk()
    main(root)
    root.title('Пейнт 2.0')
    root.mainloop()
